Algoritmo closure lr1:
    filaEstados &lt;- [estado]
    enquanto tamanho de filaEstados > 0:
        item &lt;- primeiro de filaEstados
        b &lt;- símbolo da produção do item na posição do item
        se b é terminal:
            remove primeiro de filaEstados
            continua para próxima iteração
        lookahead &lt;- {}
        se posição do item for a ultima posição da produção:
            lookahead &lt;- lookahead do item
        caso contrário:
            firstBeta &lt;- {}
            nulo &lt;- verdadeiro
            para cada símbolo beta na produção do item a partir da posição do item:
                se beta é terminal:
                    adiciona beta a betaFirst
                    nulo &lt;- falso
                    interrompe o loop
                caso contrário:
                    adiciona first(beta) sem &epsilon; a betaFirst
                    se first(beta) não inclui &epsilon;:
                        nulo &lt;- false
                        interrompe o loop
            se nulo é verdadeiro:
                lookahead &lt;- betaFirst &cup; lookahead do item
            caso contrário:
                lookahead &lt;- betaFirst
        para cada produção r do não terminal b:
            novoItem &lt;- item da forma {produção: r, posição: 0, lookahead: lookahead}
            se novoItem não existe em estado:
                adiciona novoItem a estado
                adiciona novoItem a filaEstados
            caso contrário
                adiciona lookahead em lookahead do item existente
        remove primeiro de filaEstados