itensParaVerificar <- itens do estado
enquanto tamanho de itensParaVerificar > 0:
    item <- primeiro item de itensParaVerificar
    b <- símbolo à direita do item na regra
    se b não pertence aos não_terminais:
        remove primeiro item de itensParaVerificar
        continua para a próxima iteração
    lookahead <- conjunto vazio
    se posição do item na regra é a última posição da regra:
        lookahead <- lookahead do item
    senão:
        betaFirst <- lista vazia
        nulo <- verdadeiro
        para cada símbolo beta na regra, começando do símbolo seguinte ao item:
            se beta não é um não-terminal:
                adiciona beta à betaFirst
                nulo <- falso
                sai do loop
            senão:
                first <- cópia do conjunto first(beta)
                adiciona elementos de first, exceto ε, à betaFirst
                se ε não pertence a first:
                    nulo <- falso
                    sai do loop
        se nulo é verdadeiro:
            lookahead <- união de betaFirst e lookahead do item
        senão:
            lookahead <- betaFirst
    para cada regra r em regras:
        se lado esquerdo de r é igual a símbolo:
            existente <- índice do item em estado com regra r e posição 0
            se existente é -1:
                adiciona {regra: r, posição: 0, lookahead: lookahead} a estado
                adiciona {regra: r, posição: 0, lookahead: lookahead} a itensParaVerificar
                continua para a próxima iteração
            para cada l em lookahead:
                adiciona l ao conjunto lookahead do item existente em estado
    remove primeiro item de itensParaVerificar